/* PAGE-SPECIFIC STYLES FOR THE ABOUT PAGE */
      
/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RPsbs-580, #RPsbsr-580 {      
        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 7vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (522/16rem);
            /* moved section padding to the .cs-content so we can have the cs-picture be full width on mobile without the padding preventing it from doing so */
            padding: var(--sectionPadding);
            padding-top: 0;
            /* prevents padding from affecting width and height */
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-picture {
            display: block;
            position: relative;
            width: 100%;
            height: (300/16rem);

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }
    }

}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #RPsbs-580, #RPsbsr-580 {
        padding: var(--sectionPadding);

        .cs-container {
            flex-direction: row;
            justify-content: flex-start;
            /* 60px - 128px */
            gap: clamp(3.75rem, 10vw, 8rem);
        }

        .cs-content {
            width: 53%;
            /* reset the padding, add the section padding back to the section container */
            padding: 0;
        }

        .cs-picture {
            width: 47vw;
            max-width: (494/16rem);
            /* 518px - 700px */
            height: clamp(32.375rem, 63vw, 43.75rem);
            /* 16px - 28px, added margin left and bottom to cs-picture so it pushes away by the same amount the yellow box element overlaps it left and bottom. This maintains consistent spacing left and bottom */
            margin: 0 0 clamp(1rem, 2.4vw, 1.75rem) clamp(1rem, 2.4vw, 1.75rem);
            position: relative;

            &:before {
                /* yellow box */
                content: '';
                width: 50%;
                height: 60%;
                background: var(--secondary);
                opacity: 1;
                display: block;
                position: absolute;
                /* 16px - 28px, wrapped in calc function to multiple by negative 1 and get a negative clamp value */
                bottom: ~"calc(clamp(1rem, 2.4vw, 1.75rem)*-1)";
                left: ~"calc(clamp(1rem, 2.4vw, 1.75rem)*-1)";
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #RPsbs-580, #RPsbsr-580 {
            .cs-topper {
                color: var(--bodyTextColorWhite);
            }

            .cs-title, .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: .8;
            }

            .cs-picture {
                &:before {
                    background-color: var(--accent);
                }
            }
        }
    }
}
                                
/*-- -------------------------- -->
<---    Side By Side Reverse    -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RPsbsr-580 {
        background-color: #f7f7f7;
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #RPsbsr-580 {
        .cs-container {
            justify-content: flex-end;
        }

        .cs-content {
            /* sends it to the left in the first position */
            order: -1;
        }

        .cs-picture {
            /* 16px - 28px, added margin left and bottom to cs-picture so it pushes away by the same amount the yellow box element overlaps it left and bottom. This maintains consistent spacing left and bottom */
            margin: 0 clamp(1rem, 2.4vw, 1.75rem) clamp(1rem, 2.4vw, 1.75rem) 0;

            &:before {
                /* yellow box */
                content: '';
                width: 50%;
                height: 60%;
                background: var(--secondary);
                opacity: 1;
                display: block;
                position: absolute;
                left: auto;
                /* 16px - 28px, wrapped in calc function to multiple by negative 1 and get a negative clamp value */
                bottom: ~"calc(clamp(1rem, 2.4vw, 1.75rem)*-1)";
                right: ~"calc(clamp(1rem, 2.4vw, 1.75rem)*-1)";
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #RPsbsr-580 {
            background-color: rgba(0, 0, 0, .2);
        }
    }
}
                                
                                
/*-- -------------------------- -->
<---           Stats            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #stats-316 {
        padding: var(--sectionPadding);
        background-color: var(--secondary);
    
        .cs-card-group {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: (600/16em);
            margin: auto;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: (40/16rem);
        }
        
        .cs-item {
            list-style: none;
            width: (235/16rem);
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: flex-start;
            align-items: center;
        }

        .cs-picture {
            width: (80/16rem);
            height: (80/16rem);
            /* 12px - 20px */
            margin-right: clamp(.75rem, 3vw, 1.25rem);
            border-radius: 50%;
            border: 1px solid var(--primary);
            display: flex;
            justify-content: center;
            align-items: center;
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-icon {
            width: (40/16rem);
            height: auto;
        }

        .cs-flex-group {
            display: flex;
            justify-content: center;
            align-items: flex-start;
            flex-direction: column;
        }

        .cs-number {
            font-size: var(--headerFontSize);
            color: var(--bodyTextColorWhite);
            font-weight: 900;
            line-height: 1.2em;
            margin: 0;
            display: block;
        }

        .cs-desc {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            color: #fff;
            display: block;
        }
    }

}

/* Tablet - 650px */
@media only screen and (min-width: 40.625rem) {
    #stats-316 {
        .cs-card-group {
            flex-direction: row;
            flex-wrap: wrap;
            column-gap: (20/16rem);
            row-gap: (32/16rem);
        }
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #stats-316 {
        .cs-card-group {
            max-width: (1280/16rem);
            flex-wrap: nowrap;
            justify-content: space-evenly;
        }
    }
}
                                

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #Aboutsbs-328 {
        padding: var(--sectionPadding);
        background-color: #f7f7f7;

        .cs-container {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

		.cs-topper {
			color: var(--primary);
		}
    
        .cs-text {
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-circles {
            width: 100%;
            /* changes at desktop */
            max-width: (374/16rem);
            margin: auto;
            /* 40px - 48px */
            margin-top: clamp(2.5rem, 3vw, 3rem);
            display: flex;
            align-items: flex-start;
            gap: (20/16rem);
        }
        
        .cs-circle {
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            flex: 1;
            aspect-ratio: 1;
        }

        .cs-ring-wrapper {
            position: relative;
            margin: 0 0 (8/16rem) 0;
        }

        .cs-number {
            /* 20px - 39px */
            font-size: clamp(1.25rem, 3vw, 2.4375rem);
            font-weight: 900;
            /* prevents mouse from interacting with it */
            pointer-events: none;
            line-height: 1.2em;
            color: var(--headerColor);
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        .cs-desc {
            /* 14px - 16px */
            font-size: clamp(.875rem, 1.4vw, 1rem);
            line-height: 1.5em;
            text-align: center;
            width: 100%;
            color: var(--bodyTextColor);
        }
        
        .cs-ring {
            --ring-width: 8px;
            
            width: ~"calc(100% - var(--ring-width))";
            aspect-ratio: 1;
            overflow: visible;
            pointer-events: none;
            rotate: -90deg;
            scale: 1 -1;
        }
        
        .cs-ring circle {
            fill: none;
            stroke: #F7F7F7;
            stroke-width: var(--ring-width);
        }
        
        .cs-ring circle:last-of-type {
            stroke: var(--primary);
            stroke-linecap: round;
            stroke-dasharray: ~"calc(var(--ratio) * 314%) 314%";
            
            transition: stroke-dasharray 1s;
        }
        
        .cs-circle:hover .cs-ring {
            --ratio: 0 !important;
        }
        
        .cs-picture {
            /* set font size to scale with view width, stopping at 68% the value of em */
            font-size:~"min(2.16vw, .68em)";
            width: (520/16em);
            height: (680/16em);
            /* margin top and bottom to match the exact amount the grey square overflows the parent for consistent spacing */
            margin: (48/16em) 0;
            position: relative;
            display: block;
            &:before {
                /* grey box */
                content: '';
                width: 100%;
                height: 100%;
                border-radius: (12/16rem);
                background: var(--secondary);
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                transform: rotate(15deg);
            }
            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                border-radius: (10/16rem);
                object-fit: cover;
            }
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #Aboutsbs-328 {
        .cs-container {
            max-width: (1280/16rem);
            /* set to horizontal arrangement */
            flex-direction: row;
            justify-content: center;
            /* 77px - 160px */
            gap: clamp(4.8125rem, 10vw + 1rem, 10rem);
        }

        .cs-content {
            text-align: left;
            align-items: flex-start;
        }

        .cs-picture {
            font-size:~"min(1.1vw, 1em)";
            margin: (56/16em) 0 (56/16em) (80/16em);
            /* prevent flexbox from squishing it */
            flex: none;
        }

        .cs-circles {
            max-width: 100%;
            margin-left: 0;
            margin-right: 0;
        }

        .cs-ring-wrapper {
            /* breaks the children out of the container.  They can now be arrnaged as if thy are all children of the cs-circle */
            display: contents;
        }

        .cs-ring {
            /* make the ring position absolute so it can sit on top of the other elements that are centered relatively in the cs-circle */
            width: 100%;
            height: auto;
            position: absolute;
            top: 0;
            left: 0;
        }

        .cs-number {
            /* make the number relative positioning so it and the cs-desc can position themselves around each other */
            position: relative;
            top: auto;
            left: auto;
            transform: none;
        }

        .cs-desc {
            position: relative;
            bottom: auto;
            left: auto;
            transform: none;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #Aboutsbs-328 {
            background-color: rgba(0, 0, 0, .2);
            .cs-picture {
                &:before, &:after {
                    background: var(--accent);
                }
            }

            .cs-topper {
                color: var(--secondaryLight);
            }

            .cs-title, .cs-text, .cs-call, .cs-number, .cs-desc {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: .8;
            }

            .cs-button-solid {
                background-color: var(--secondaryLight);
                color: #1a1a1a;
                &:before {
                    background-color: #fff;
                }
            }

            .cs-ring circle {
                stroke: var(--accent);
            }

            .cs-ring circle:last-of-type {
                stroke: var(--secondaryLight);
            }
        }
    }
}
                                
