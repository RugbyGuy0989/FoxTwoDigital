/* PAGE-SPECIFIC STYLES FOR THE REVIEWS PAGE */


/*-- -------------------------- -->
<---        Content Page        -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #content-page-852 {

        padding: var(--sectionPadding);
        background-color: #fff;
        /* clips the wave background from causing overflow issues when it goes off screen */
        overflow: hidden;
        position: relative;
        z-index: 1;
        
        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
            position: relative;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (738/16rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        h2, h3, h4, h5, h6 {
            font-weight: 700;
            text-align: inherit;
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
        }

        h2 {
            font-size: (32/16rem);
            margin-top: (32/16rem);
        }

        h3 {
            font-size: (24/16rem);
            color: var(--primary);
        }

        h4, h5, h6 {
            font-size: (20/16rem);
        }

        .cs-button-solid {
            margin-bottom: (32/16rem);
        }

        .cs-no-margin {
            margin: 0;
        }

        .cs-color {
            color: var(--primary);
        }
    
        p {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            margin: 0 0 (16/16rem) 0;
            color: var(--bodyTextColor);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }

            a {
                font-size: inherit;
                line-height: inherit;
                text-decoration: underline;
                color: var(--primary);
            }
        }

        ol, ul {
            padding-left: (24/16rem);
            margin: 0 0 (32/16rem) 0;
            color: var(--bodyTextColor);
            display: flex;
            flex-direction: column;
            gap: (16/16rem);
        }

        ul {
            li {
                list-style: none;
                color: inherit;
                position: relative;

                &:before {
                    /* custom list bullet */
                    content: '';
                    width: 3px;
                    height: 3px;
                    background: currentColor;
                    opacity: 1;
                    border-radius: 50%;
                    position: absolute;
                    display: block;
                    top: (10/16rem);
                    left: (-12/16rem);
                }
            }
        }

        img {
            width: 100%;
            height: auto;
            display: block;
        }

        .cs-image-group {
            width: 50%;
            max-width: (433/16rem);
            display: none;
            flex-direction: column;
            gap: (20/16rem);
            position: relative;

            &:after {
                /* colored box */
                content: '';
                width: 100%;
                /* 177px - 258px */
                height: clamp(11.0625rem, 19vw, 16.125rem);
                background: var(--primary);
                border-radius: (100/16rem) 0 (100/16rem) ;
                opacity: .23;
                display: block;
            }
        }

        .cs-picture {
            width: 100%;
            /* 300px - 520px */
            height: clamp(18.75rem, 40vw, 32.5rem);
            box-shadow: 0px 3.3478px 50.2169px rgba(0, 0, 0, 0.16);
            /* 125px - 200px */
            border-radius: 0 clamp(7.8125rem, 15vw, 12.5rem) 0 clamp(7.8125rem, 15vw, 12.5rem);
            /* prevents border from affecting height and width */
            box-sizing: border-box;
            /* clips img tag corners */
            overflow: hidden;
            display: block;
            position: relative;

            img {
                width: 100%;
                height: 100%;
                /* makes it act like a background image */
                object-fit: cover;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #content-page-852 {
        .cs-container {
            flex-direction: row;
            align-items: flex-start;
            justify-content: space-between;
        }

        .cs-content {
            flex: none;
            width: 60%;
            /* sens it to the right in the 2nd position */
            order: 2;
        }

        .cs-image-group {
            display: flex;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #content-page-852 {
            background-color: var(--dark);
            
            .cs-title, .cs-text, h2, h3, h4, h5, h6, li, p {
                color: var(--bodyTextColorWhite);
            }
            .cs-color, a {
                color: var(--primaryLight);
            }

            p, li {
                color: #ebebeb;
            }

            .cs-picture {
                border-color: var(--dark);
                background-color: var(--dark);
            }
        }
    }
}

/*-- -------------------------- -->
<---           Steps            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {


    #steps-1376 {
        padding: var(--sectionPadding);
        background-color: #f7f7f7;
        /* clips the waves and lines from cause overflow issues */
        overflow: hidden;

        .cs-container {
            max-width: (1440/16rem);
            width: 100%;
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
            /* set text align to left if content needs to be left aligned */
            text-align: center;
        }

        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            font-weight: 700;
            margin-bottom: (4/16rem);
            color: var(--primary);
            text-transform: uppercase;
            letter-spacing: 0.1em;
            display: block;
            text-align: inherit;
        }

        .cs-title {
            font-size: var(--headerFontSize);
            line-height: 1.2em;
            font-weight: 900;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
            text-align: inherit;
        }

        .cs-topper {
            color: #767676;
        }

        .cs-title {
            max-width: 25ch;
            margin: 0;
        }

        .cs-group1, .cs-group2 {
            /* the contents of this div are no longer its children. This div acts as if it doesn't exist and their content is now children of the next level parent, in this case, the cs-card-group. That way they can all be arranged together as children under 1 parent div instead of children in two different parent divs */
            display: contents;
        }

        .cs-card-group {
            width: 100%;
            margin: 0 auto;
            padding: 0;
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            /* 16px - 20px */
            gap: clamp(1rem, 2.3vw, 1.25rem);
            position: relative;
        }

        .cs-item {
            list-style: none;
            width: 100%;
            max-width: (240/16rem);
            height: (240/16rem);
            margin: 0;
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            padding: (24/16rem);
            /* clips the :before element from being clickable when it's outside the item and triggering the hover animation */
            overflow: hidden;
            border-radius: 50%;
            border: 1px solid #e8e8e8;
            background-color: #F4F4F4;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            position: relative;
            z-index: 1;
            transition: background-color 0.3s, border-color 0.3s;
            text-align: center;

            &:before {
                content: '';
                width: (148/16rem);
                height: (148/16rem);
                background: #fff;
                border-radius: 50%;
                opacity: 0;
                position: absolute;
                display: block;
                bottom: 0;
                left: (-116/16rem);
                transform: translateY(6.25rem);
                transition: left .3s, transform .3s, opacity .3s;
            }

            &:hover {
                background-color: var(--primary);
                border-color: var(--primary);

                &:before {
                    opacity: .2;
                    left: (-16/16rem);
                    transform: translateY(0);
                }

                .cs-icon {
                    filter: grayscale(1) brightness(1000%);
                }

                .cs-h3, .cs-item-text {
                    color: var(--bodyTextColorWhite);
                }

                .cs-text {
                    opacity: .8;
                }
            }
        }

        .cs-picture {
            width: (100/16rem);
            height: auto;
            margin: 0 0 (8/16rem) 0;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-icon {
            width: (32/16rem);
            height: auto;
        }

        .cs-h3 {
            font-size: (20/16rem);
            line-height: 1.2em;
            font-weight: bold;
            margin: 0 0 (12/16rem) 0;
            color: var(--headerColor);
            transition: color 0.3s;
            text-align: inherit;
            transition: color .3s;
        }

        .cs-item-text {
            font-size: (14/16rem);
            line-height: 1.5em;
            max-width: (450/16rem);
            margin: 0;
            padding: 0;
            color: var(--bodyTextColor);
            transition: color .3s, opacity .3s;
        }

        .cs-waves {
            display: none;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #steps-1376 {
        .cs-card-group {
            justify-content: center;
            align-items: center;
            gap: (40/16rem);
        }

        .cs-group1 {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-between;
            gap: (48/16rem);
        }

        .cs-group2 {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-evenly;
            gap: (48/16rem);
        }

        .cs-item {
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-waves {
            width: (71/16rem);
            height: auto;
            display: block;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);

            img {
                width: 100%;
                height: auto;
            }
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #steps-1376 {
        .cs-card-group {
            flex-direction: column;
        }

        .cs-group1 {
            width: 100%;
            /* -8px to -30px, we put the clamp in a calc function to turn it into a negative number and pull down to cause the overlapping effect */
            margin-bottom: ~"calc(clamp(.5rem, 2vw, 1.875rem)*-1)";
            flex-direction: row;
        }

        .cs-group2 {
            width: 100%;
            /* -8px to -30px */
            margin-top: ~"calc(clamp(.5rem, 2vw, 1.875rem)*-1)";
            flex-direction: row;
        }

        .cs-waves {
            width: 110vw;
            max-width: (1920/16rem);
            height: auto;

            &:before {
                /* left continuation line */
                content: '';
                width: 50vw;
                height: 4px;
                background: #e8e8e8;
                opacity: 1;
                position: absolute;
                display: block;
                top: (84/16rem);
                right: 100%;
            }

            &:after {
                /* Right continuation line */
                content: '';
                width: 50vw;
                height: 4px;
                background: #e8e8e8;
                opacity: 1;
                position: absolute;
                display: block;
                top: (84/16rem);
                left: 100%;
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #steps-1376 {
            background-color: rgba(0, 0, 0, .2);
            .cs-item {
                background-color: var(--medium);
                border-color: rgba(255, 255, 255, 0.2);

                &:hover {
                    background-color: var(--primary);
                    border-color: var(--primary);
                }
            }

            .cs-topper {
                color: var(--primary);
            }

            .cs-title,
            .cs-text,
            .cs-h3,
            .cs-item-text,
            .cs-link {
                color: var(--bodyTextColorWhite);
            }

            .cs-text, .cs-item-text {
                opacity: 0.8;
            }
            
            .cs-waves {
                opacity: .1;
            }
        }
    }
}

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #sbs-578 {
        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 7vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (522/16rem);
            /* moved section padding to the .cs-content so we can have the cs-picture be full width on mobile without the padding preventing it from doing so */
            padding: var(--sectionPadding);
            padding-top: 0;
            /* prevents padding from affecting width and height */
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-text {
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-picture {
            display: block;
            position: relative;
            width: 100%;
            height: (300/16rem);

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #sbs-578 {
        padding: var(--sectionPadding);

        .cs-container {
            flex-direction: row;
            justify-content: flex-start;
            /* 60px - 128px */
            gap: clamp(3.75rem, 10vw, 8rem);
        }

        .cs-content {
            width: 53%;
            /* reset the padding, add the section padding back to the section container */
            padding: 0;
        }

        .cs-picture {
            width: 47vw;
            max-width: (494/16rem);
            /* 518px - 700px */
            height: clamp(32.375rem, 63vw, 43.75rem);
            /* 16px - 28px, added margin left and bottom to cs-picture so it pushes away by the same amount the yellow box element overlaps it left and bottom. This maintains consistent spacing left and bottom */
            margin: 0 0 clamp(1rem, 2.4vw, 1.75rem) clamp(1rem, 2.4vw, 1.75rem);
            position: relative;

            &:before {
                /* yellow box */
                content: "";
                width: 50%;
                height: 60%;
                background: var(--secondary);
                opacity: 1;
                display: block;
                position: absolute;
                /* 16px - 28px, wrapped in calc function to multiple by negative 1 and get a negative clamp value */
                bottom: ~"calc(clamp(1rem, 2.4vw, 1.75rem)*-1)";
                left: ~"calc(clamp(1rem, 2.4vw, 1.75rem)*-1)";
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #sbs-578 {
            .cs-topper {
                color: var(--bodyTextColorWhite);
            }

            .cs-title,
            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: 0.8;
            }

            .cs-picture {
                &:before {
                    background-color: var(--accent);
                }
            }
        }
    }
}

/*-- -------------------------- -->
<---          Pricing           -->
<--- -------------------------- -*/

/* Mobile */
@media only screen and (min-width: 0rem) {
    #pricing-243 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            /* changes to 1104px at desktop */
            max-width: (736/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-text {
            margin-bottom: (32/16rem);
        }

        .cs-toggle-group {
            width: (200/16rem);
            margin: auto;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .cs-plan {
            font-size: (16/16rem);
            line-height: 1.5em;
            margin: 0;
            padding: 0;
            color: var(--headerColor);
            &:hover {
                cursor: pointer;
            }
        }

        .cs-toggle {
            width: (62/16rem);
            height: (36/16rem);
            border-radius: (40/16rem);
            background-color: var(--primaryLight);
            margin: 0 (12/16rem);
            position: relative;
            /* prevent flexbox from squishing it */
            flex: none;

            &:hover {
                cursor: pointer;
            }

            &.active {
                &:before {
                    opacity: 1;
                }
                .cs-toggle-switch {
                    left: (32/16rem);
                }
            }

            &:before {
                /* top right box */
                content: "";
                width: 100%;
                height: 100%;
                background: linear-gradient(
                    90deg,
                    #4adede -24.69%,
                    #1aa7ec 126.23%
                );
                opacity: 0;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                border-radius: (40/16rem);
                transition: opacity 0.3s;
            }
        }

        .cs-toggle-switch {
            width: (24/16rem);
            height: (24/16rem);
            display: block;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            left: (6/16rem);
            transition: left 0.3s;
            background: #fff;
        }

        .cs-option-group {
            position: relative;
            /* hides the second options when it leaves the container */
            overflow: hidden;
            /* these two create the 3D illusion */
            perspective: 700px;
            transform-style: preserve-3d;

            &.option2-active {
                .cs-option1-text {
                    opacity: 0;
                    transform: scaleY(0);
                }
                .cs-option2-text {
                    top: 0;
                    opacity: 1;
                }
            }
        }

        .cs-option1-text {
            transform-origin: center center;
            transition:
                opacity 0.3s,
                transform 0.3s;
        }

        .cs-option2-text {
            /* push the text down, outside of the group wrapper and animate back up */
            opacity: 0;
            position: absolute;
            left: 0;
            top: (70/16rem);
            transition:
                opacity 0.3s,
                top 0.6s cubic-bezier(0.42, 0, 0.16, 1.39);
        }

        .cs-card-group {
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: (16/16rem);
        }

        .cs-item {
            list-style: none;
            /* 24px - 32px */
            padding: clamp(1.5rem, 3vw, 2rem);
            width: 100%;
            max-width: (356/16rem);
            border-radius: (14/16rem);
            background: var(--bodyTextColorWhite);
            box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.1);
            /* prevents padding from adding to height and width */
            box-sizing: border-box;

            &:nth-of-type(2) {
                .cs-option2-text,
                .cs-option1-text {
                    transition-delay: 0.1s;
                }
            }

            &:nth-of-type(3) {
                .cs-option2-text,
                .cs-option1-text {
                    transition-delay: 0.2s;
                }
            }
        }

        .cs-popular {
            background: var(--primary);
            position: relative;
            /* send to the bottom */
            order: 3;

            &:before {
                /* Most Popular Tag */
                content: "Most Popular";
                font-size: (14/16rem);
                text-align: center;
                line-height: (29/16rem);
                font-weight: 700;
                padding: 0 (12/16rem);
                color: var(--bodyTextColorWhite);
                background-color: var(--secondary);
                border-radius: (30/16rem);
                position: absolute;
                display: block;
                /* 24px - 32px */
                top: clamp(1.5rem, 3vw, 2rem);
                /* 24px - 32px */
                right: clamp(1.5rem, 3vw, 2rem);
            }

            .cs-h3,
            .cs-item-text,
            .cs-price,
            .cs-included,
            .cs-li {
                color: var(--bodyTextColorWhite);
            }

            .cs-button-solid {
                background-color: var(--bodyTextColorWhite);
                color: var(--primary);
                transition: color 0.3s;

                &:hover {
                    color: var(--bodyTextColorWhite);
                }
            }

            .cs-li-img {
                /* turns the check mark white */
                filter: brightness(900%);
            }
        }

        .cs-h3 {
            font-size: (20/16rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0 0 (12/16rem);
            padding: 0;
            color: var(--headerColor);
        }

        .cs-item-text {
            font-size: (16/16rem);
            line-height: 1.5em;
            margin: 0 0 (24/16rem);
            padding: 0;
            color: var(--bodyTextColor);
        }

        .cs-price {
            font-size: (39/16rem);
            line-height: 1.2em;
            font-weight: 700;
            margin-bottom: (8/16rem);
            color: var(--headerColor);
            /* spans are inline, need to add block for margin to work */
            display: block;
        }

        .cs-button-solid {
            font-size: (16/16rem);
            line-height: (56/16em);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: auto;
            color: #fff;
            min-width: (150/16rem);
            margin: 0 0 (32/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primaryLight);
            border-radius: (4/16rem);
            display: block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: var(--secondary);
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-included {
            font-size: (16/16rem);
            line-height: 1.5em;
            font-weight: 700;
            margin-bottom: (12/16rem);
            color: var(--headerColor);
            display: block;
        }

        .cs-ul {
            padding: 0;
            margin: 0;
        }

        .cs-li {
            font-size: (16/16rem);
            line-height: 1.5em;
            list-style: none;
            padding: 0;
            margin: 0 0 (012/16rem);
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;

            &:last-of-type {
                margin-bottom: 0;
            }
        }

        .cs-li-img {
            width: (20/16rem);
            height: auto;
            margin-top: (3/16rem);
            margin-right: (8/16rem);
        }
    }
}

/* Tablet 768px */
@media only screen and (min-width: 48rem) {
    #pricing-243 {
        .cs-card-group {
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .cs-item {
            width: 50%;
            /* ensures they stay the same height if you add more content */
            align-self: stretch;
        }

        .cs-popular {
            width: 100%;
            max-width: 100%;
        }
    }
}

/* Small Desktop */
@media only screen and (min-width: 64rem) {
    #pricing-243 {
        .cs-container {
            max-width: (1104/16rem);
        }

        .cs-card-group {
            flex-wrap: nowrap;
        }

        .cs-item {
            width: 100%;
        }

        .cs-popular {
            max-width: (356/16rem);
            /* remove the order */
            order: unset;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #pricing-243 {
            .cs-topper {
                color: var(--primaryLight);
            }
            .cs-title,
            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-plan {
                color: var(--bodyTextColorWhite);
            }

            .cs-item {
                background: var(--medium);
            }
            .cs-popular {
                background: var(--primary);
            }

            .cs-h3,
            .cs-item-text,
            .cs-price,
            .cs-included,
            .cs-li {
                color: var(--bodyTextColorWhite);
            }

            .cs-li-img {
                /* make so bright it turns white */
                filter: brightness(900%);
            }
        }
    }
}

/*-- -------------------------- -->
<---            FAQ             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #faq-1346 {
        padding: var(--sectionPadding);
        position: relative;

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
            position: relative;
            z-index: 1;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-flex-group {
            width: 100%;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            /* 16px - 20px */
            gap: clamp(1rem, 2.3vw, 1.25rem);
            position: relative;
        }

        .cs-wrapper {
            position: relative;
        }

        .cs-button-group {
            width: 100%;
            display: flex;
            flex-direction: column;
            gap: (8/16rem);
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-option {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            /* 50px - 72px */
            line-height: clamp(3.125rem, 5vw, 4.5rem);
            font-weight: 700;
            padding: 0;
            /* prevents border from affecting height and width */
            box-sizing: border-box;
            background-color: #fff;
            color: var(--headerColor);
            border: 1px solid #e8e8e8;
            position: relative;
            z-index: 1;
            transition: border-color 0.3s;

            &:before {
                /* background color */
                content: "";
                width: 100%;
                height: 100%;
                background: var(--primary);
                opacity: 0;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                z-index: -1;
                transition: opacity 0.3s;
            }

            &:hover {
                &:hover {
                    border-color: var(--primary);
                    cursor: pointer;
                    &:before {
                        opacity: 0.1;
                    }
                }
            }

            &.cs-active {
                border-color: var(--primary);
                &:before {
                    opacity: 0.1;
                }
            }
        }

        .cs-faq-group {
            width: 100%;
            max-width: (847/16rem);
            padding: 0;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: (8/16rem);
            transition:
                transform 0.7s,
                opacity 0.3s,
                visibility 0.5s,
                top 0.3s,
                left 0.3s;
            /* makes the transfrom scaling orgin the top left corner, dictates the direction by which the scale transforms animate towards */
            transform-origin: top;
            transform-style: preserve-3d;
            perspective: 900px;

            &.cs-hidden {
                position: absolute;
                /* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
                visibility: hidden;
                /* prevents the mouse from interacting with it */
                pointer-events: none;
                /* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
                opacity: 0;
                /* this top and left value help control the animation, by setting it to position absolute and left 0, the FAQ won't fly off screen to the left, it will stop its position to be at the left edge of the .cs-flex-group (left: 0). Same for the bottom:0 value, the FAQ won't go past that position when it animates */
                top: 0;
                left: 0;
                position: absolute;
                /* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
                transform: scaleY(0);

                .cs-faq-item {
                    transform: rotateX(270deg);
                    opacity: 0;
                }
            }
        }

        .cs-faq-item {
            list-style: none;
            width: 100%;
            border: 1px solid #e8e8e8;
            /* clips all corners of the button that overlap the rounded border */
            overflow: hidden;
            opacity: 1;
            top: 0;
            transform: rotateX(0deg);
            transition:
                transform 0.6s,
                opacity 0.3s;

            &:nth-of-type(2) {
                transition-delay: 0.1s;
            }
            &:nth-of-type(3) {
                transition-delay: 0.2s;
            }
            &:nth-of-type(4) {
                transition-delay: 0.3s;
            }
            &:nth-of-type(5) {
                transition-delay: 0.4s;
            }
            &:nth-of-type(6) {
                transition-delay: 0.5s;
            }
            &:nth-of-type(7) {
                transition-delay: 0.6s;
            }
            &:nth-of-type(8) {
                transition-delay: 0.7s;
            }
            &:nth-of-type(9) {
                transition-delay: 0.8s;
            }
            &:nth-of-type(10) {
                transition-delay: 0.9s;
            }

            &.active {
                .cs-button {
                    color: var(--primary);
                    &:before {
                        background-color: var(--primary);
                        transform: rotate(315deg);
                    }
                    &:after {
                        background-color: var(--primary);
                        transform: rotate(-315deg);
                    }
                }
                .cs-item-p {
                    height: auto;
                    /* 20px - 24px bottom */
                    /* 16px - 24px left & right */
                    padding: 0 clamp(1rem, 2vw, 1.5rem)
                        clamp(1.25rem, 1.3vw, 1.5rem);
                    opacity: 1;
                }
            }
        }

        .cs-button {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            line-height: 1.2em;
            text-align: left;
            font-weight: bold;
            /* 16px - 24px top & bottom */
            /* 16px - 20px left & right */
            padding: clamp(1rem, 2vw, 1.5rem) clamp(1rem, 2vw, 1.25rem);
            background-color: #fff;
            border: none;
            color: var(--headerColor);
            display: block;
            width: 100%;
            position: relative;
            transition:
                background-color 0.3s,
                color 0.3s;

            &:hover {
                cursor: pointer;
            }

            &:before {
                /* left line */
                content: "";
                width: (8/16rem);
                height: (2/16rem);
                background-color: var(--headerColor);
                opacity: 1;
                border-radius: 50%;
                position: absolute;
                display: block;
                top: 50%;
                right: (24/16rem);
                transform: rotate(45deg);
                /* animate the transform from the left side of the x axis, and the center of the y */
                transform-origin: left center;
                transition: transform 0.5s;
            }

            &:after {
                /* right line */
                content: "";
                width: (8/16rem);
                height: (2/16rem);
                background-color: var(--headerColor);
                opacity: 1;
                border-radius: 50%;
                position: absolute;
                display: block;
                top: 50%;
                right: (21/16rem);
                transform: rotate(-45deg);
                /* animate the transform from the right side of the x axis, and the center of the y */
                transform-origin: right center;
                transition: transform 0.5s;
            }
        }

        .cs-button-text {
            width: 80%;
            display: block;
        }

        .cs-item-p {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            width: 90%;
            height: 0;
            margin: 0;
            /* 16px - 24px */
            padding: 0 clamp(1rem, 2vw, 1.5rem);
            opacity: 0;
            color: var(--bodyTextColor);
            /* clips the text so it doesn't show up */
            overflow: hidden;
            transition:
                opacity 0.3s,
                padding-bottom 0.3s;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 48rem) {
    #faq-1346 {
        .cs-container {
            max-width: (1280/16rem);
        }

        .cs-flex-group {
            flex-direction: row;
        }

        .cs-button-group {
            width: 31%;
            max-width: (413/16rem);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #faq-1346 {
            .cs-title,
            .cs-item-p,
            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: 0.8;
            }

            .cs-option {
                border-color: rgba(255, 255, 255, 0.3);
                background-color: transparent;
                color: var(--bodyTextColorWhite);

                &.cs-active {
                    border-color: var(--primary);
                }
            }

            .cs-faq-item {
                border-color: rgba(255, 255, 255, 0.3);
                &.active {
                    .cs-button {
                        background-color: var(--primary);
                        color: var(--headerColor);
                        &:before,
                        &:after {
                            background-color: var(--headerColor);
                        }
                    }

                    .cs-item-p {
                        /* 20px - 24px */
                        padding-top: clamp(1.25rem, 1.3vw, 1.5rem);
                    }
                }

                &:hover {
                    border-color: var(--primary);
                    transition: border-color 0.3s;
                }
            }

            .cs-button {
                background-color: var(--dark);
                color: var(--bodyTextColorWhite);
                &:before,
                &:after {
                    background-color: var(--bodyTextColorWhite);
                }
            }
        }
    }
}
                              
                                